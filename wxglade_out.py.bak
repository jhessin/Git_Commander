#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.1 on Tue Aug 26 14:42:20 2025
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import wx
import sys
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((974, 1039))
        self.SetTitle("frame")

        self.main_panel = wx.Panel(self, wx.ID_ANY)

        vertical_stack = wx.BoxSizer(wx.VERTICAL)

        lists = wx.StaticBoxSizer(wx.StaticBox(self.main_panel, wx.ID_ANY, "sizer_2"), wx.HORIZONTAL)
        vertical_stack.Add(lists, 1, wx.EXPAND, 0)

        self.main_list = wx.ListCtrl(lists.GetStaticBox(), wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
        self.main_list.AppendColumn("A", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.main_list.AppendColumn("B", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.main_list.AppendColumn("C", format=wx.LIST_FORMAT_LEFT, width=-1)
        lists.Add(self.main_list, 1, wx.EXPAND, 0)

        center_buttons = wx.BoxSizer(wx.VERTICAL)
        lists.Add(center_buttons, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.remove_item = wx.Button(lists.GetStaticBox(), wx.ID_ANY, "<")
        center_buttons.Add(self.remove_item, 0, 0, 0)

        self.add_item = wx.Button(lists.GetStaticBox(), wx.ID_ANY, ">")
        center_buttons.Add(self.add_item, 0, 0, 0)

        self.working_list = wx.ListCtrl(lists.GetStaticBox(), wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
        self.working_list.AppendColumn("A", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.working_list.AppendColumn("B", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.working_list.AppendColumn("C", format=wx.LIST_FORMAT_LEFT, width=-1)
        lists.Add(self.working_list, 1, wx.EXPAND, 0)

        class RedirectText:
            def __init__(self, text_ctrl):
                self.output = text_ctrl

            def write(self, string):
                wx.CallAfter(self.output.AppendText, string)

            def flush(self):
                pass  # Required for compatibility with Python's sys.stdout
        self.text_ctrl_1 = wx.TextCtrl(self.main_panel, wx.ID_ANY, "")
        self.text_ctrl_1.SetMinSize((956, 200))
        self.text_ctrl_1.SetBackgroundColour(wx.Colour(0, 0, 0))
        self.text_ctrl_1.SetForegroundColour(wx.Colour(0, 255, 0))
        self.text_ctrl_1.SetFont(wx.Font(9, wx.FONTFAMILY_MODERN, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Terminal"))
        self.text_ctrl_1.Enable(False)

        class MyApp(wx.Frame):
            def __init__(self, *args, **kwargs):
                super().__init__(*args, **kwargs)

                # Set up the GUI
                panel = wx.Panel(self)
                self.text_ctrl = wx.TextCtrl(panel, style=wx.TE_MULTILINE | wx.TE_READONLY | wx.HSCROLL)
                button = wx.Button(panel, label="Print to Console")

                # Layout
                sizer = wx.BoxSizer(wx.VERTICAL)
                sizer.Add(self.text_ctrl, proportion=1, flag=wx.EXPAND | wx.ALL, border=5)
                sizer.Add(button, flag=wx.ALL | wx.CENTER, border=5)
                panel.SetSizer(sizer)

                # Redirect stdout
                redir = RedirectText(self.text_ctrl)
                sys.stdout = redir

                # Bind button event
                button.Bind(wx.EVT_BUTTON, self.on_button_click)

                self.SetTitle("Console Output in wxPython")
                self.SetSize((500, 400))
                self.Centre()

            def on_button_click(self, event):
                print("Hello, this is a message from the console!")
                print("You can see this output in the wx.TextCtrl widget.")

        if __name__ == "__main__":
            app = wx.App(False)
            frame = MyApp(None)
            frame.Show()
            app.MainLoop()
        vertical_stack.Add(self.text_ctrl_1, 0, wx.EXPAND | wx.SHAPED, 0)

        self.main_panel.SetSizer(vertical_stack)

        self.Layout()
        # end wxGlade

# end of class MainFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MainFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
