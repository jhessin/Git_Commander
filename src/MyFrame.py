# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.1 on Fri Sep 12 18:05:19 2025
#
import sys
import wx

from console_output import ConsoleOutput


# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1057, 1039))
        self.SetTitle("frame")

        self.notebook_1 = wx.Notebook(self, wx.ID_ANY, style=wx.NB_BOTTOM)

        self.split_pane = wx.SplitterWindow(self.notebook_1, wx.ID_ANY)
        self.split_pane.SetMinimumPaneSize(400)
        self.notebook_1.AddPage(self.split_pane, "Actions")

        self.all_repos = wx.Panel(self.split_pane, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_2, 90, 0, 0)

        self.list_all_repos = wx.ListCtrl(self.all_repos, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
        self.list_all_repos.SetToolTip("These are all the repos you have found on your system.")
        self.list_all_repos.AppendColumn("Repo Location", format=wx.LIST_FORMAT_LEFT, width=-1)
        sizer_2.Add(self.list_all_repos, 90, wx.EXPAND, 0)

        btns_repo_selection = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(btns_repo_selection, 1, wx.ALIGN_CENTER_VERTICAL, 0)

        self.btn_rm = wx.Button(self.all_repos, wx.ID_ANY, "<", style=wx.BU_EXACTFIT)
        btns_repo_selection.Add(self.btn_rm, 0, 0, 0)

        self.btn_add = wx.Button(self.all_repos, wx.ID_ANY, ">", style=wx.BU_EXACTFIT)
        btns_repo_selection.Add(self.btn_add, 0, 0, 0)

        self.btn_clear = wx.Button(self.all_repos, wx.ID_ANY, "<=", style=wx.BU_EXACTFIT)
        btns_repo_selection.Add(self.btn_clear, 0, 0, 0)

        self.btn_add_all = wx.Button(self.all_repos, wx.ID_ANY, "=>", style=wx.BU_EXACTFIT)
        btns_repo_selection.Add(self.btn_add_all, 0, 0, 0)

        grid_sizer_2 = wx.FlexGridSizer(2, 2, 0, 0)
        sizer_1.Add(grid_sizer_2, 10, wx.EXPAND, 0)

        self.button_11 = wx.Button(self.all_repos, wx.ID_ANY, "Scan for repos")
        grid_sizer_2.Add(self.button_11, 0, 0, 0)

        self.button_12 = wx.Button(self.all_repos, wx.ID_ANY, "Remove invalid repos")
        grid_sizer_2.Add(self.button_12, 0, 0, 0)

        self.button_13 = wx.Button(self.all_repos, wx.ID_ANY, "Add new repo")
        grid_sizer_2.Add(self.button_13, 0, 0, 0)

        self.button_14 = wx.Button(self.all_repos, wx.ID_ANY, "Remove repo")
        grid_sizer_2.Add(self.button_14, 0, 0, 0)

        self.working_repos = wx.Panel(self.split_pane, wx.ID_ANY)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)

        self.list_working_repos = wx.ListCtrl(self.working_repos, wx.ID_ANY,
                                              style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
        self.list_working_repos.SetToolTip("These are the repos you are currently working with.")
        self.list_working_repos.AppendColumn("Repo Location", format=wx.LIST_FORMAT_LEFT, width=-1)
        sizer_3.Add(self.list_working_repos, 90, wx.EXPAND, 0)

        grid_sizer_3 = wx.FlexGridSizer(3, 3, 0, 0)
        sizer_3.Add(grid_sizer_3, 10, wx.EXPAND, 0)

        self.checkbox_1 = wx.CheckBox(self.working_repos, wx.ID_ANY, "Force Mode")
        grid_sizer_3.Add(self.checkbox_1, 0, 0, 0)

        self.panel_1 = wx.Panel(self.working_repos, wx.ID_ANY)
        grid_sizer_3.Add(self.panel_1, 1, wx.EXPAND, 0)

        self.panel_2 = wx.Panel(self.working_repos, wx.ID_ANY)
        grid_sizer_3.Add(self.panel_2, 1, wx.EXPAND, 0)

        self.btn_reset = wx.Button(self.working_repos, wx.ID_ANY, "Reset")
        grid_sizer_3.Add(self.btn_reset, 0, 0, 0)

        self.btn_pull = wx.Button(self.working_repos, wx.ID_ANY, "Pull")
        grid_sizer_3.Add(self.btn_pull, 0, 0, 0)

        self.btn_push = wx.Button(self.working_repos, wx.ID_ANY, "Push")
        grid_sizer_3.Add(self.btn_push, 0, 0, 0)

        self.btn_reset_all = wx.Button(self.working_repos, wx.ID_ANY, "Reset All")
        grid_sizer_3.Add(self.btn_reset_all, 0, 0, 0)

        self.btn_pull_all = wx.Button(self.working_repos, wx.ID_ANY, "Pull All")
        grid_sizer_3.Add(self.btn_pull_all, 0, 0, 0)

        self.btn_push_all = wx.Button(self.working_repos, wx.ID_ANY, "Push All")
        grid_sizer_3.Add(self.btn_push_all, 0, 0, 0)

        self.log_window = wx.TextCtrl(self.notebook_1, wx.ID_ANY, "", style=wx.TE_READONLY | wx.TE_MULTILINE)
        self.notebook_1.AddPage(self.log_window, "Log")

        sys.stdout = ConsoleOutput(self.log_window)
        sys.stderr = ConsoleOutput(self.log_window)

        grid_sizer_3.AddGrowableCol(0)
        grid_sizer_3.AddGrowableCol(1)
        grid_sizer_3.AddGrowableCol(2)

        self.working_repos.SetSizer(sizer_3)

        grid_sizer_2.AddGrowableCol(0)
        grid_sizer_2.AddGrowableCol(1)

        self.all_repos.SetSizer(sizer_1)

        self.split_pane.SplitVertically(self.all_repos, self.working_repos)

        self.Layout()

        self.button_11.Bind(wx.EVT_BUTTON, self.scan_for_repos)
        self.button_12.Bind(wx.EVT_BUTTON, self.remove_invalid_repos_from_all)
        self.button_13.Bind(wx.EVT_BUTTON, self.add_new_repo_to_all)
        self.button_14.Bind(wx.EVT_BUTTON, self.remove_repo_from_all)
        self.checkbox_1.Bind(wx.EVT_CHECKBOX, self.force_mode_changed)
        self.btn_reset.Bind(wx.EVT_BUTTON, self.reset_selected_repos)
        self.btn_pull.Bind(wx.EVT_BUTTON, self.pull_selected_repos)
        self.btn_push.Bind(wx.EVT_BUTTON, self.push_selected_repos)
        self.btn_reset_all.Bind(wx.EVT_BUTTON, self.reset_all_working_repos)
        self.btn_pull_all.Bind(wx.EVT_BUTTON, self.pull_all_repos)
        self.btn_push_all.Bind(wx.EVT_BUTTON, self.push_all_repos)
        # end wxGlade

    def show_log(self):
        self.notebook_1.SetSelection(1)

    def show_actions(self):
        self.notebook_1.SetSelection(0)

    def scan_for_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'scan_for_repos' not implemented!")
        self.show_log()
        event.Skip()

    def remove_invalid_repos_from_all(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'remove_invalid_repos_from_all' not implemented!")
        event.Skip()

    def add_new_repo_to_all(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'add_new_repo_to_all' not implemented!")
        event.Skip()

    def remove_repo_from_all(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'remove_repo_from_all' not implemented!")
        event.Skip()

    def force_mode_changed(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'force_mode_changed' not implemented!")
        event.Skip()

    def reset_selected_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'reset_selected_repos' not implemented!")
        event.Skip()

    def pull_selected_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'pull_selected_repos' not implemented!")
        event.Skip()

    def push_selected_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'push_selected_repos' not implemented!")
        event.Skip()

    def reset_all_working_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'reset_all_working_repos' not implemented!")
        event.Skip()

    def pull_all_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'pull_all_repos' not implemented!")
        event.Skip()

    def push_all_repos(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'push_all_repos' not implemented!")
        event.Skip()

# end of class MyFrame
